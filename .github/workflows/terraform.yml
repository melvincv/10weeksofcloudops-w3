# Credentials can be provided by using the AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, and optionally AWS_SESSION_TOKEN environment variables. 
# The region can be set using the AWS_REGION or AWS_DEFAULT_REGION environment variables.

name: GitOps for Terraform

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the "main" branch
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: cloudops-w3
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      # Installs Terraform CLI
      - name: Install Terraform CLI
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.5

      # Initialize Terraform Providers
      - name: Initialize
        run: |
          terraform init

      # Validates syntax
      - name: Validate
        run: |
          terraform validate

      # Creates resources in AWS Cloud
      - name: Apply to AWS
        env:
          TF_VAR_MASTER_PASS: ${{ secrets.TF_VAR_MASTER_PASS }}
        run: |
          terraform apply --auto-approve
